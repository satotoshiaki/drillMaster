/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M15
 * Generated at: 2017-07-14 02:25:16 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.teacher.viewStudent;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import beans.Student;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("beans.Student");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- %\n");
      out.write("\t@SuppressWarnings(\"unchecked\")\n");
      out.write("\tArrayList<Student> student = (ArrayList<Student>) request.getAttribute(\"Student\");\n");
      out.write("%-->\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta charset=\"utf-8\">\n");
      out.write("\t    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n");
      out.write("\t    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("\t\t<title>Home</title>\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"/drillMaster/css/bootstrap.min.css\">\n");
      out.write("\t\t<link rel=\"stylesheet\" href=\"/drillMaster/css/signin.css\">\n");
      out.write("\t</head>\n");
      out.write("\t<body>\n");
      out.write("\t  <div class=\"container\">\n");
      out.write("\n");
      out.write("      <!-- Static navbar -->\n");
      out.write("      <nav class=\"navbar navbar-default\">\n");
      out.write("        <div class=\"container-fluid\">\n");
      out.write("          <div class=\"navbar-header\">\n");
      out.write("            <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n");
      out.write("              <span class=\"sr-only\">Toggle navigation</span>\n");
      out.write("              <span class=\"icon-bar\"></span>\n");
      out.write("              <span class=\"icon-bar\"></span>\n");
      out.write("              <span class=\"icon-bar\"></span>\n");
      out.write("            </button>\n");
      out.write("            <a class=\"navbar-brand\" href=\"/drillMaster/jsp/teacher/home/index.jsp\">Drill Master</a>\n");
      out.write("          </div>\n");
      out.write("          <div id=\"navbar\" class=\"navbar-collapse collapse\">\n");
      out.write("            <ul class=\"nav navbar-nav\">\n");
      out.write("              <li><a href=\"/drillMaster/jsp/teacher/home/index.jsp\">Home</a></li>\n");
      out.write("              <li><a href=\"/drillMaster/jsp/teacher/addStudent/index.jsp\">学習者登録</a></li>\n");
      out.write("              <li><a href=\"/drillMaster/jsp/teacher/addQuestion/index.jsp\">問題登録</a></li>\n");
      out.write("              <li><a href=\"/drillMaster/jsp/teacher/viewStudent/index.jsp\">学習者一覧</a></li>\n");
      out.write("            </ul>\n");
      out.write("            <ul class=\"nav navbar-nav navbar-right\">\n");
      out.write("              <li><a href=\"/drillMaster/teacher/logout/\">ログアウト</a></li>\n");
      out.write("            </ul>\n");
      out.write("          </div><!--/.nav-collapse -->\n");
      out.write("        </div><!--/.container-fluid -->\n");
      out.write("      </nav>\n");
      out.write("\n");
      out.write("\t\t<div class=\"app\">\n");
      out.write("\t\t  <!-- tiles:insert attribute=\"content\" /-->\n");
      out.write("\t\t  <hr>\n");
      out.write("\t\t  <footer>\n");
      out.write("\t\t    <p>&copy; by toshiakiSATO</p>\n");
      out.write("\t\t  </footer>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("    <!-- Bootstrap core JavaScript\n");
      out.write("    ================================================== -->\n");
      out.write("    <!-- Placed at the end of the document so the pages load faster -->\n");
      out.write("    <script src=\"/drillMaster/js/jquery.min.js\"></script>\n");
      out.write("    <script src=\"/drillMaster/js/bootstrap.min.js\"></script>\n");
      out.write("\t</body>\n");
      out.write("\n");
      out.write("\t<script type='text/javascript'>\n");
      out.write("\t\t$(function(){\n");
      out.write("\t\t\t$('#navbar li a').each(function(){\n");
      out.write("\t\t\t\tvar $href = $(this).attr('href');\n");
      out.write("\t\t\t\tif(location.href.match($href)) {\n");
      out.write("\t\t\t\t\tvar $class = $(this).parent().parent().parent().attr('class');\n");
      out.write("\t\t\t\t\tif($class == \"dropdown\" ){\n");
      out.write("\t\t\t\t\t\t$(this).parent().parent().parent().addClass('active');\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t\telse{\n");
      out.write("\t\t\t\t\t\t$(this).parent().addClass('active');\n");
      out.write("\t\t\t\t\t}\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\telse {\n");
      out.write("\t\t\t\t\t$('#navbar li a').removeClass('active');\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(location.href.match(\"/drillMaster/teacher/editStudent/\") && $href==\"/drillMaster/teacher/viewStudent/\"){\n");
      out.write("\t\t\t\t\t$(this).parent().addClass('active');\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t});\n");
      out.write("\t\t});\n");
      out.write("\t</script>\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div>\n");
      out.write("\t<h2 class=\"text-center page-header\">学習者一覧</h2>\n");
      out.write("</div>\n");
      out.write("<table class=\"table table-striped table-bordered\">\n");
      out.write("\t<thead>\n");
      out.write("\t<tr>\n");
      out.write("\t<th>ユーザーid</th>\n");
      out.write("\t<th>学習者名</th>\n");
      out.write("\t<th>校種・学年</th>\n");
      out.write("\t<th></th>\n");
      out.write("\t</tr>\n");
      out.write("\t</thead>\n");
      out.write("\t<tbody>\n");
      out.write("\n");
      out.write("\t\t<!--%\n");
      out.write("\t\t\tfor (int i=0;i<student.size();i++) {\n");
      out.write("\t\t\t\tout.println(\"<tr>\");\n");
      out.write("\t\t\t\tout.println(\"<th>\");\n");
      out.write("\t\t\t\tout.println(student.get(i).getUserID());\n");
      out.write("\t\t\t\tout.println(\"</th>\");\n");
      out.write("\t\t\t\tout.println(\"<td>\");\n");
      out.write("\t\t\t\tout.println(student.get(i).getStudentName());\n");
      out.write("\t\t\t\tout.println(\"</td>\");\n");
      out.write("\t\t\t\tout.println(\"<td>\");\n");
      out.write("\t\t\t\tout.println(student.get(i).getStudentAge());\n");
      out.write("\t\t\t\tout.println(\"</td>\");\n");
      out.write("\t\t\t\tout.println(\"<td>\");\n");
      out.write("\t\t\t}\n");
      out.write("\t\t%-->\n");
      out.write("\n");
      out.write("</table>\n");
      out.write("<p align=CENTER>\n");
      out.write("\n");
      out.write("<form method=\"POST\" action=\"VIew\">\n");
      out.write("\t<input type=\"submit\" class=\"btn btn-primary btn-lg\" value=\"解答一覧\"  id='startQuestion'>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write(" <pre class=\"text-center\">完全習得型学習システム [ Drill Master ]</pre>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
